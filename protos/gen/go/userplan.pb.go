// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.12.4
// source: userplan.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_userplan_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{0}
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone         string                 `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Active        bool                   `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_userplan_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type UserFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone         string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Page          int64                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserFilter) Reset() {
	*x = UserFilter{}
	mi := &file_userplan_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilter) ProtoMessage() {}

func (x *UserFilter) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilter.ProtoReflect.Descriptor instead.
func (*UserFilter) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{2}
}

func (x *UserFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserFilter) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserFilter) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserFilter) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserFilter) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CreateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_userplan_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_userplan_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type PaginatedUsers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Page          int64                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaginatedUsers) Reset() {
	*x = PaginatedUsers{}
	mi := &file_userplan_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginatedUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedUsers) ProtoMessage() {}

func (x *PaginatedUsers) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedUsers.ProtoReflect.Descriptor instead.
func (*PaginatedUsers) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{5}
}

func (x *PaginatedUsers) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *PaginatedUsers) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PaginatedUsers) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PaginatedUsers) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserActivationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // from path
	Active        bool                   `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`               // from body
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserActivationRequest) Reset() {
	*x = UserActivationRequest{}
	mi := &file_userplan_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserActivationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivationRequest) ProtoMessage() {}

func (x *UserActivationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivationRequest.ProtoReflect.Descriptor instead.
func (*UserActivationRequest) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{6}
}

func (x *UserActivationRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserActivationRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type Plan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DurationDays  int64                  `protobuf:"varint,4,opt,name=duration_days,json=durationDays,proto3" json:"duration_days,omitempty"`
	Price         float64                `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	IsActive      bool                   `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Plan) Reset() {
	*x = Plan{}
	mi := &file_userplan_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{7}
}

func (x *Plan) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Plan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Plan) GetDurationDays() int64 {
	if x != nil {
		return x.DurationDays
	}
	return 0
}

func (x *Plan) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Plan) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type PlanAssignmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // from path
	PlanId        uint64                 `protobuf:"varint,2,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"` // from path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanAssignmentRequest) Reset() {
	*x = PlanAssignmentRequest{}
	mi := &file_userplan_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanAssignmentRequest) ProtoMessage() {}

func (x *PlanAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanAssignmentRequest.ProtoReflect.Descriptor instead.
func (*PlanAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{8}
}

func (x *PlanAssignmentRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PlanAssignmentRequest) GetPlanId() uint64 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

type UserPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // from path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserPlanRequest) Reset() {
	*x = UserPlanRequest{}
	mi := &file_userplan_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPlanRequest) ProtoMessage() {}

func (x *UserPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPlanRequest.ProtoReflect.Descriptor instead.
func (*UserPlanRequest) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{9}
}

func (x *UserPlanRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RenewPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // from path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenewPlanRequest) Reset() {
	*x = RenewPlanRequest{}
	mi := &file_userplan_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewPlanRequest) ProtoMessage() {}

func (x *RenewPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewPlanRequest.ProtoReflect.Descriptor instead.
func (*RenewPlanRequest) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{10}
}

func (x *RenewPlanRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Plan management messages
type CreatePlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plan          *Plan                  `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePlanRequest) Reset() {
	*x = CreatePlanRequest{}
	mi := &file_userplan_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlanRequest) ProtoMessage() {}

func (x *CreatePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlanRequest.ProtoReflect.Descriptor instead.
func (*CreatePlanRequest) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePlanRequest) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type PlanIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // from path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanIDRequest) Reset() {
	*x = PlanIDRequest{}
	mi := &file_userplan_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanIDRequest) ProtoMessage() {}

func (x *PlanIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanIDRequest.ProtoReflect.Descriptor instead.
func (*PlanIDRequest) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{12}
}

func (x *PlanIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PlanNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // from path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanNameRequest) Reset() {
	*x = PlanNameRequest{}
	mi := &file_userplan_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanNameRequest) ProtoMessage() {}

func (x *PlanNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanNameRequest.ProtoReflect.Descriptor instead.
func (*PlanNameRequest) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{13}
}

func (x *PlanNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdatePlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plan          *Plan                  `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePlanRequest) Reset() {
	*x = UpdatePlanRequest{}
	mi := &file_userplan_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlanRequest) ProtoMessage() {}

func (x *UpdatePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlanRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlanRequest) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePlanRequest) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type ListPlansRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlansRequest) Reset() {
	*x = ListPlansRequest{}
	mi := &file_userplan_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlansRequest) ProtoMessage() {}

func (x *ListPlansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlansRequest.ProtoReflect.Descriptor instead.
func (*ListPlansRequest) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{15}
}

func (x *ListPlansRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPlansRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListPlansResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plans         []*Plan                `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlansResponse) Reset() {
	*x = ListPlansResponse{}
	mi := &file_userplan_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlansResponse) ProtoMessage() {}

func (x *ListPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userplan_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlansResponse.ProtoReflect.Descriptor instead.
func (*ListPlansResponse) Descriptor() ([]byte, []int) {
	return file_userplan_proto_rawDescGZIP(), []int{16}
}

func (x *ListPlansResponse) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

func (x *ListPlansResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_userplan_proto protoreflect.FileDescriptor

const file_userplan_proto_rawDesc = "" +
	"\n" +
	"\x0euserplan.proto\x12\buserplan\"\a\n" +
	"\x05Empty\"n\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\x04 \x01(\tR\x05phone\x12\x16\n" +
	"\x06active\x18\x05 \x01(\bR\x06active\"t\n" +
	"\n" +
	"UserFilter\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\x03 \x01(\tR\x05phone\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x03R\x04page\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\"7\n" +
	"\x11CreateUserRequest\x12\"\n" +
	"\x04user\x18\x01 \x01(\v2\x0e.userplan.UserR\x04user\"7\n" +
	"\x11UpdateUserRequest\x12\"\n" +
	"\x04user\x18\x01 \x01(\v2\x0e.userplan.UserR\x04user\"t\n" +
	"\x0ePaginatedUsers\x12$\n" +
	"\x05users\x18\x01 \x03(\v2\x0e.userplan.UserR\x05users\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x03R\x04page\"H\n" +
	"\x15UserActivationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\x12\x16\n" +
	"\x06active\x18\x02 \x01(\bR\x06active\"\xa4\x01\n" +
	"\x04Plan\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12#\n" +
	"\rduration_days\x18\x04 \x01(\x03R\fdurationDays\x12\x14\n" +
	"\x05price\x18\x05 \x01(\x01R\x05price\x12\x1b\n" +
	"\tis_active\x18\x06 \x01(\bR\bisActive\"I\n" +
	"\x15PlanAssignmentRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\x12\x17\n" +
	"\aplan_id\x18\x02 \x01(\x04R\x06planId\"*\n" +
	"\x0fUserPlanRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\"+\n" +
	"\x10RenewPlanRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\"7\n" +
	"\x11CreatePlanRequest\x12\"\n" +
	"\x04plan\x18\x01 \x01(\v2\x0e.userplan.PlanR\x04plan\"\x1f\n" +
	"\rPlanIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"%\n" +
	"\x0fPlanNameRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"7\n" +
	"\x11UpdatePlanRequest\x12\"\n" +
	"\x04plan\x18\x01 \x01(\v2\x0e.userplan.PlanR\x04plan\"@\n" +
	"\x10ListPlansRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"O\n" +
	"\x11ListPlansResponse\x12$\n" +
	"\x05plans\x18\x01 \x03(\v2\x0e.userplan.PlanR\x05plans\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total2\x85\x02\n" +
	"\vUserService\x12;\n" +
	"\tListUsers\x12\x14.userplan.UserFilter\x1a\x18.userplan.PaginatedUsers\x12:\n" +
	"\n" +
	"CreateUser\x12\x1b.userplan.CreateUserRequest\x1a\x0f.userplan.Empty\x12:\n" +
	"\n" +
	"UpdateUser\x12\x1b.userplan.UpdateUserRequest\x1a\x0f.userplan.Empty\x12A\n" +
	"\rSetUserActive\x12\x1f.userplan.UserActivationRequest\x1a\x0f.userplan.Empty2\xeb\x04\n" +
	"\vPlanService\x12>\n" +
	"\n" +
	"AssignPlan\x12\x1f.userplan.PlanAssignmentRequest\x1a\x0f.userplan.Empty\x128\n" +
	"\vGetUserPlan\x12\x19.userplan.UserPlanRequest\x1a\x0e.userplan.Plan\x12<\n" +
	"\rRenewUserPlan\x12\x1a.userplan.RenewPlanRequest\x1a\x0f.userplan.Empty\x129\n" +
	"\n" +
	"CreatePlan\x12\x1b.userplan.CreatePlanRequest\x1a\x0e.userplan.Plan\x126\n" +
	"\vGetPlanByID\x12\x17.userplan.PlanIDRequest\x1a\x0e.userplan.Plan\x12:\n" +
	"\rGetPlanByName\x12\x19.userplan.PlanNameRequest\x1a\x0e.userplan.Plan\x129\n" +
	"\n" +
	"UpdatePlan\x12\x1b.userplan.UpdatePlanRequest\x1a\x0e.userplan.Plan\x126\n" +
	"\n" +
	"DeletePlan\x12\x17.userplan.PlanIDRequest\x1a\x0f.userplan.Empty\x12D\n" +
	"\tListPlans\x12\x1a.userplan.ListPlansRequest\x1a\x1b.userplan.ListPlansResponse\x12<\n" +
	"\x10TogglePlanActive\x12\x17.userplan.PlanIDRequest\x1a\x0f.userplan.EmptyB4Z2hamgit.ir/arcaptcha/arcaptcha-dumbledore/protos;pbb\x06proto3"

var (
	file_userplan_proto_rawDescOnce sync.Once
	file_userplan_proto_rawDescData []byte
)

func file_userplan_proto_rawDescGZIP() []byte {
	file_userplan_proto_rawDescOnce.Do(func() {
		file_userplan_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_userplan_proto_rawDesc), len(file_userplan_proto_rawDesc)))
	})
	return file_userplan_proto_rawDescData
}

var file_userplan_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_userplan_proto_goTypes = []any{
	(*Empty)(nil),                 // 0: userplan.Empty
	(*User)(nil),                  // 1: userplan.User
	(*UserFilter)(nil),            // 2: userplan.UserFilter
	(*CreateUserRequest)(nil),     // 3: userplan.CreateUserRequest
	(*UpdateUserRequest)(nil),     // 4: userplan.UpdateUserRequest
	(*PaginatedUsers)(nil),        // 5: userplan.PaginatedUsers
	(*UserActivationRequest)(nil), // 6: userplan.UserActivationRequest
	(*Plan)(nil),                  // 7: userplan.Plan
	(*PlanAssignmentRequest)(nil), // 8: userplan.PlanAssignmentRequest
	(*UserPlanRequest)(nil),       // 9: userplan.UserPlanRequest
	(*RenewPlanRequest)(nil),      // 10: userplan.RenewPlanRequest
	(*CreatePlanRequest)(nil),     // 11: userplan.CreatePlanRequest
	(*PlanIDRequest)(nil),         // 12: userplan.PlanIDRequest
	(*PlanNameRequest)(nil),       // 13: userplan.PlanNameRequest
	(*UpdatePlanRequest)(nil),     // 14: userplan.UpdatePlanRequest
	(*ListPlansRequest)(nil),      // 15: userplan.ListPlansRequest
	(*ListPlansResponse)(nil),     // 16: userplan.ListPlansResponse
}
var file_userplan_proto_depIdxs = []int32{
	1,  // 0: userplan.CreateUserRequest.user:type_name -> userplan.User
	1,  // 1: userplan.UpdateUserRequest.user:type_name -> userplan.User
	1,  // 2: userplan.PaginatedUsers.users:type_name -> userplan.User
	7,  // 3: userplan.CreatePlanRequest.plan:type_name -> userplan.Plan
	7,  // 4: userplan.UpdatePlanRequest.plan:type_name -> userplan.Plan
	7,  // 5: userplan.ListPlansResponse.plans:type_name -> userplan.Plan
	2,  // 6: userplan.UserService.ListUsers:input_type -> userplan.UserFilter
	3,  // 7: userplan.UserService.CreateUser:input_type -> userplan.CreateUserRequest
	4,  // 8: userplan.UserService.UpdateUser:input_type -> userplan.UpdateUserRequest
	6,  // 9: userplan.UserService.SetUserActive:input_type -> userplan.UserActivationRequest
	8,  // 10: userplan.PlanService.AssignPlan:input_type -> userplan.PlanAssignmentRequest
	9,  // 11: userplan.PlanService.GetUserPlan:input_type -> userplan.UserPlanRequest
	10, // 12: userplan.PlanService.RenewUserPlan:input_type -> userplan.RenewPlanRequest
	11, // 13: userplan.PlanService.CreatePlan:input_type -> userplan.CreatePlanRequest
	12, // 14: userplan.PlanService.GetPlanByID:input_type -> userplan.PlanIDRequest
	13, // 15: userplan.PlanService.GetPlanByName:input_type -> userplan.PlanNameRequest
	14, // 16: userplan.PlanService.UpdatePlan:input_type -> userplan.UpdatePlanRequest
	12, // 17: userplan.PlanService.DeletePlan:input_type -> userplan.PlanIDRequest
	15, // 18: userplan.PlanService.ListPlans:input_type -> userplan.ListPlansRequest
	12, // 19: userplan.PlanService.TogglePlanActive:input_type -> userplan.PlanIDRequest
	5,  // 20: userplan.UserService.ListUsers:output_type -> userplan.PaginatedUsers
	0,  // 21: userplan.UserService.CreateUser:output_type -> userplan.Empty
	0,  // 22: userplan.UserService.UpdateUser:output_type -> userplan.Empty
	0,  // 23: userplan.UserService.SetUserActive:output_type -> userplan.Empty
	0,  // 24: userplan.PlanService.AssignPlan:output_type -> userplan.Empty
	7,  // 25: userplan.PlanService.GetUserPlan:output_type -> userplan.Plan
	0,  // 26: userplan.PlanService.RenewUserPlan:output_type -> userplan.Empty
	7,  // 27: userplan.PlanService.CreatePlan:output_type -> userplan.Plan
	7,  // 28: userplan.PlanService.GetPlanByID:output_type -> userplan.Plan
	7,  // 29: userplan.PlanService.GetPlanByName:output_type -> userplan.Plan
	7,  // 30: userplan.PlanService.UpdatePlan:output_type -> userplan.Plan
	0,  // 31: userplan.PlanService.DeletePlan:output_type -> userplan.Empty
	16, // 32: userplan.PlanService.ListPlans:output_type -> userplan.ListPlansResponse
	0,  // 33: userplan.PlanService.TogglePlanActive:output_type -> userplan.Empty
	20, // [20:34] is the sub-list for method output_type
	6,  // [6:20] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_userplan_proto_init() }
func file_userplan_proto_init() {
	if File_userplan_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_userplan_proto_rawDesc), len(file_userplan_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_userplan_proto_goTypes,
		DependencyIndexes: file_userplan_proto_depIdxs,
		MessageInfos:      file_userplan_proto_msgTypes,
	}.Build()
	File_userplan_proto = out.File
	file_userplan_proto_goTypes = nil
	file_userplan_proto_depIdxs = nil
}
