syntax = "proto3";
package userplan;

option go_package = "hamgit.ir/arcaptcha/arcaptcha-dumbledore/protos;pb";

message Empty {}

// -------------------- User Service --------------------

service UserService {
    rpc ListUsers(UserFilter) returns (PaginatedUsers);
    rpc CreateUser(CreateUserRequest) returns (Empty);
    rpc UpdateUser(UpdateUserRequest) returns (Empty);
    rpc SetUserActive(UserActivationRequest) returns (Empty);
}

message User {
    uint64 id = 1;
    string name = 2;
    string email = 3;
    string phone = 4;
    bool active = 5;
}

message UserFilter {
    string name = 1;
    string email = 2;
    string phone = 3;
    int64 page = 4;
    int64 size = 5;
}

message CreateUserRequest {
    User user = 1;
}

message UpdateUserRequest {
    User user = 1;
}

message PaginatedUsers {
    repeated User users = 1;
    int64 total = 2;
    int64 size = 3;
    int64 page = 4;
}

message UserActivationRequest {
    uint64 user_id = 1; // from path
    bool active = 2;    // from body
}

// -------------------- Plan Service --------------------

service PlanService {
    rpc AssignPlan(PlanAssignmentRequest) returns (Empty);
    rpc GetUserPlan(UserPlanRequest) returns (Plan);
    rpc RenewUserPlan(RenewPlanRequest) returns (Empty);

    // Plan management methods
    rpc CreatePlan(CreatePlanRequest) returns (Plan);
    rpc GetPlanByID(PlanIDRequest) returns (Plan);
    rpc GetPlanByName(PlanNameRequest) returns (Plan);
    rpc UpdatePlan(UpdatePlanRequest) returns (Plan);
    rpc DeletePlan(PlanIDRequest) returns (Empty);
    rpc ListPlans(ListPlansRequest) returns (ListPlansResponse);
    rpc TogglePlanActive(PlanIDRequest) returns (Empty);
}

message Plan {
    uint64 id = 1;
    string name = 2;
    string description = 3;
    int64 duration_days = 4;
    double price = 5;
    bool is_active = 6;
}

message PlanAssignmentRequest {
    uint64 user_id = 1; // from path
    uint64 plan_id = 2; // from path
}

message UserPlanRequest {
    uint64 user_id = 1; // from path
}

message RenewPlanRequest {
    uint64 user_id = 1; // from path
    int64 end_date = 2;  // Unix timestamp
}
// Plan management messages
message CreatePlanRequest {
    Plan plan = 1;
}

message PlanIDRequest {
    uint64 id = 1; // from path
}

message PlanNameRequest {
    string name = 1; // from path
}

message UpdatePlanRequest {
    Plan plan = 1;
}

message ListPlansRequest {
    int32 limit = 1;
    int32 offset = 2;
}

message ListPlansResponse {
    repeated Plan plans = 1;
    int64 total = 2;
}
